Interview Question - https://www.youtube.com/watch?v=YEDjfd-OXhY
		     https://www.youtube.com/watch?v=Kk_RsBfWfUQ
Git- youtube - codebasics github

Distributed Version Control System.
Commit - pushing code to the repository (local or remote).

if wish to work on any new feature then create a branch from existing master and then start working on that branch.
and later, you may merge newly created branch to master.

Repository is a place where you can place your project.

if more than 1 developers are working on the same file and make any changes on the same line then there would be merge conflicts.
and to resolve this, you need to take a pull and resolve those conflicts manually.

Git Bash - Git client to run Git commands for windows. you may run the same commands from command prompt as well.

Git commands - 

clone - copy the repository to your local.
git clone {repository url}

git fetch - will be getting the update (which have been pushed to remote) from remote branch to our local.
	    it does not change the working copy of local.

git pull - will be getting the update (which have been pushed to remote) from remote branch to our local.
	   it merges the changes with local working copy.

git status - difference between remote and local repository - 
	     untracked file.
git add - used to add file to staging area - means area which has files, ready to push to repository.
	  it shows the files, highlighted in green, which means, files are in my staging area. 
	  later on staging area will be used to commit files when you run git commit.

git commit - git commit takes the files from staging area and commit them locally.
	     git commit -m 'file pushed'
	     m is optional - it means message


git log - git log will show you all your commit history.

git push - git push will push the code to remote repository.

git difftool - shows the difference between your local changes and previous versoin of file.

git checkout - git checkout --<file> is used to discard the changes in workig file or directory.
	       git checkout --. is used to discard the changes in all workig file or directory.
	       it works until the code is committed.

git revert - git revert --<commit id> will revert the change even after commit.
:q is used to quit the current open screen.
clear - to clear the screen.

git reset --hard <commit id> - is a powerful command,which takes you to the any previous version or time stamp of your code history.

git branch - shows the all created branches/list all the branches.

git branch <new branch name> - will create a new branch with name <new branch name>.

git checkout <branch name> - is used to switch from current branch to another branch (name given).

if want to merge new branch to current branch, then steps -
1. git checkout master
2. git merge <new branch name>

if want to push the new branch to git hub then -
1. git checkout <new branch name>
2. git push
3. git push --set-upstream origin <new branch name>

git branch -d <branch name> - delete the branch